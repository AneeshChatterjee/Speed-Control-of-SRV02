#include "stm32f4xx.h"
uint16_t ticks;

float speedRad = 0.0; // Real speed in rad/s
float speedRpm = 0.0; // Real speed in rpm

float iteration_time = 20e-3; //measure every 20ms
#define PPR 1024 // pulse per revolution


void configGPIO(void)
{
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOEEN;     //GPIO Port E for PE9, PE11
	GPIOE->MODER |= ((2<<18)|(2<<22));      //AF for PE9, PE11
	GPIOE->AFR[1] |= ((1<<4)|(1<<12));      //AF1 for TIM1_CH1, TIM1_CH2

	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOCEN;	 //GPIOC
	GPIOC->MODER |= (2<<12);				//For PWM on PC6
	GPIOC->AFR[0] |= (2<<24);
}


//Configuring TIM1 in Encoder Interface Mode
void configTIM1(void)
{
	RCC->APB2ENR |= RCC_APB2ENR_TIM1EN;      //TIM1

	TIM1->PSC = 0x0000;                //Prescalar = 0
	TIM1->ARR = 0xFFFF;                //Period = 65536
	//TIM1->CR1 &= ~(1<<4);            //Upcounting Mode

	TIM1->SMCR |= (3<<0);	//Counting on both TI1 and TI2 edges i.e CH1 PE9 and CH2 PE11

	/*
	 * IC1F=IC2F = 0b0000, IC1PSC=IC2PSC = 0b00, CC1S=CC2S = 0b01
	 * TIM1->CCMR1 = 0b0000000100000001;
	 */

	TIM1->CCMR1 |= ((0x1<<0));
}

void configTIM2(void)
{
	RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;      //TIM2
	TIM2->CR1 &= ~(0x0010);    					//Set the mode to Count up
	TIM2->PSC = 1600-1;						    //Set the Prescalar
	TIM2->ARR = 200-1; 						    //Set period (Auto reload) to 1000
	TIM2->SR &= ~(0x1<<0);						//Clear Update interrupt flag
}

int main(void)
{
	SCB->CPACR|=(0xF<<20);
	configGPIO();
	configTIM1();
	configTIM2();

	NVIC->ISER[0] |= 1<<28;
	TIM2->DIER |=(1<<0);

	TIM1->CR1 |= (1<<0);
	TIM2->CR1 |= (1<<0);

	while(1)
		{
		}
}


void TIM2_IRQHandler()
{
	  ticks = TIM1->CNT;

	  speedRad = (float)(ticks/iteration_time)*(2*3.14)/(4*PPR); //rad/s for clockwise
	  speedRpm = 60*speedRad/(2*3.14);

	  TIM1->CNT=0;

	  TIM2->SR &= ~(0x1<<0);
}
